package com.polarity.summerproject.polarity;

//pure abstract class
public class Obstacle {
private Boolean color;
private Integer distance;
private Integer length;

public Obstacle(Boolean color, Integer distance, Integer length) {
   this.color = color;
   this.distance = distance;
   this.length = length;
}
	
	public Obstacle(Integer distance) { // Note: length will be generated by the child structures
		
		Random rand = new Random();
		
		this.color = rand.nextBoolean();
   this.distance = distance;
   
}

	public boolean getColor(){
		return this.color;
	}
	
	public int getDistance(){
		return this.distance;
	}
	
	public int getLength(){
		return this.length;
	}
	
private void decreaseDistanceFromPlayer(Integer decreasedDistance) {
   this.distance =- decreasedDistance;
}

private void decreaseLength(Integer length) {
   this.length =- length;
}
	
	// decrease overall distance
	// return false if nothing to decrement
	public boolean decrement(int n){
		if (distance > 0){
			decreaseDistanceFromPlayer(n);
		} else if (length > 0){
			decreaseLength(n);
		} else {
			return false;
		}
		
		return true;
	}
}
